{"ast":null,"code":"var _jsxFileName = \"/Users/denghanbo/Desktop/test/src/component/Switch.js\";\nimport React from 'react';\nimport { List, Switch } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport 'antd-mobile/dist/antd-mobile.css';\n\nclass SwitchExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false,\n      checked1: true\n    };\n  }\n\n  render() {\n    const {\n      getFieldProps\n    } = this.props.form;\n    return /*#__PURE__*/React.createElement(List, {\n      renderHeader: () => 'Form switch',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List.Item, {\n      extra: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.checked,\n        onChange: () => {\n          this.setState({\n            checked: !this.state.checked\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 18\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Off\"), /*#__PURE__*/React.createElement(List.Item, {\n      extra: /*#__PURE__*/React.createElement(Switch, Object.assign({}, getFieldProps('Switch1', {\n        initialValue: this.state.checked1,\n        valuePropName: 'checked',\n        onChange: val => {\n          console.log(val); // Do not `setState` with rc-form\n          // this.setState({ checked1: val });\n        }\n      }), {\n        onClick: checked => {\n          // set new value\n          this.props.form.setFieldsValue({\n            Switch1: checked\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"On (with rc-form)\"), /*#__PURE__*/React.createElement(List.Item, {\n      extra: /*#__PURE__*/React.createElement(Switch, Object.assign({}, getFieldProps('Switch3', {\n        initialValue: false,\n        valuePropName: 'checked'\n      }), {\n        onClick: checked => {\n          console.log(checked);\n        },\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Disabled off\"), /*#__PURE__*/React.createElement(List.Item, {\n      extra: /*#__PURE__*/React.createElement(Switch, Object.assign({}, getFieldProps('Switch4', {\n        initialValue: true,\n        valuePropName: 'checked'\n      }), {\n        onClick: checked => {\n          console.log(checked);\n        },\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Disabled on\"), /*#__PURE__*/React.createElement(List.Item, {\n      extra: /*#__PURE__*/React.createElement(Switch, Object.assign({}, getFieldProps('Switch5', {\n        initialValue: true,\n        valuePropName: 'checked'\n      }), {\n        platform: \"android\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 18\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Style for Android\"), /*#__PURE__*/React.createElement(List.Item, {\n      extra: /*#__PURE__*/React.createElement(Switch, Object.assign({}, getFieldProps('Switch6', {\n        initialValue: true,\n        valuePropName: 'checked'\n      }), {\n        platform: \"android\",\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 18\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Color for Android\"), /*#__PURE__*/React.createElement(List.Item, {\n      extra: /*#__PURE__*/React.createElement(Switch, Object.assign({}, getFieldProps('Switch7', {\n        initialValue: true,\n        valuePropName: 'checked'\n      }), {\n        platform: \"ios\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Style for iOS\"), /*#__PURE__*/React.createElement(List.Item, {\n      extra: /*#__PURE__*/React.createElement(Switch, Object.assign({}, getFieldProps('Switch8', {\n        initialValue: true,\n        valuePropName: 'checked'\n      }), {\n        platform: \"ios\",\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 18\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Color for iOS\"));\n  }\n\n}\n\nconst Se = createForm()(SwitchExample);\nexport default Se;","map":{"version":3,"sources":["/Users/denghanbo/Desktop/test/src/component/Switch.js"],"names":["React","List","Switch","createForm","SwitchExample","Component","constructor","props","state","checked","checked1","render","getFieldProps","form","setState","initialValue","valuePropName","onChange","val","console","log","setFieldsValue","Switch1","Se"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { List, Switch } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport 'antd-mobile/dist/antd-mobile.css';\n\nclass SwitchExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false,\n      checked1: true,\n    };\n  }\n\n  render() {\n    const { getFieldProps } = this.props.form;\n    return (\n      <List\n        renderHeader={() => 'Form switch'}\n      >\n        <List.Item\n          extra={<Switch\n            checked={this.state.checked}\n            onChange={() => {\n              this.setState({\n                checked: !this.state.checked,\n              });\n            }}\n          />}\n        >Off</List.Item>\n        <List.Item\n          extra={<Switch\n            {...getFieldProps('Switch1', {\n              initialValue: this.state.checked1,\n              valuePropName: 'checked',\n              onChange: (val) => {\n                console.log(val);\n                // Do not `setState` with rc-form\n                // this.setState({ checked1: val });\n              },\n            })}\n            onClick={(checked) => {\n              // set new value\n              this.props.form.setFieldsValue({\n                Switch1: checked,\n              });\n            }}\n          />}\n        >On (with rc-form)</List.Item>\n        <List.Item\n          extra={<Switch\n            {...getFieldProps('Switch3', {\n              initialValue: false,\n              valuePropName: 'checked',\n            })}\n            onClick={(checked) => { console.log(checked); }}\n            disabled\n          />}\n        >Disabled off</List.Item>\n        <List.Item\n          extra={<Switch\n            {...getFieldProps('Switch4', {\n              initialValue: true,\n              valuePropName: 'checked',\n            })}\n            onClick={(checked) => { console.log(checked); }}\n            disabled\n          />}\n        >Disabled on</List.Item>\n        <List.Item\n          extra={<Switch\n            {...getFieldProps('Switch5', {\n              initialValue: true,\n              valuePropName: 'checked',\n            })}\n            platform=\"android\"\n          />}\n        >Style for Android</List.Item>\n        <List.Item\n          extra={<Switch\n            {...getFieldProps('Switch6', {\n              initialValue: true,\n              valuePropName: 'checked',\n            })}\n            platform=\"android\"\n            color=\"red\"\n          />}\n        >Color for Android</List.Item>\n        <List.Item\n          extra={<Switch\n            {...getFieldProps('Switch7', {\n              initialValue: true,\n              valuePropName: 'checked',\n            })}\n            platform=\"ios\"\n          />}\n        >Style for iOS</List.Item>\n        <List.Item\n          extra={<Switch\n            {...getFieldProps('Switch8', {\n              initialValue: true,\n              valuePropName: 'checked',\n            })}\n            platform=\"ios\"\n            color=\"red\"\n          />}\n        >Color for iOS</List.Item>\n      </List>\n    );\n  }\n}\n\nconst Se = createForm()(SwitchExample);\n\nexport default Se"]},"metadata":{},"sourceType":"module"}