{"ast":null,"code":"var _jsxFileName = \"/Users/denghanbo/Desktop/test/src/view/Dati.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Popover, NavBar, Icon, Button } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport Axios from 'axios';\n\nclass DatiCounter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.answerEvent = () => {\n      this.setState({\n        currentTimu: this.state.currentTimu++\n      });\n    };\n\n    this.state = {\n      currentTimu: 0\n    };\n  }\n\n  render() {\n    let timuList = this.props.timuList;\n    let current = this.state.currentTimu;\n\n    if (timuList.length > 0) {\n      let option = JSON.parse(timuList[current].options);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, \"\\u9898\\u76EE:\", timuList[current].quiz), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, \"\\u9898\\u76EE\\u5217\\u8868\", option.map((item, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          onClick: this.answerEvent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }\n        }, index + 1, \":\", item);\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, \"Loading......\"));\n    }\n  } //点击答案回答问题后\n\n\n  componentWillMount() {\n    console.log(\"componentWillMount开始执行\");\n    this.props.getTim();\n  }\n\n  componentWillReceiveProps() {\n    console.log(\"componentWillReceiveProps开始执行\");\n    console.log(this.props);\n  }\n\n} //将state映射到props函数\n\n\nfunction mapStateToProps(state) {\n  return {\n    value: state.num,\n    timuList: state.timuList\n  };\n}\n\nconst addAction = {\n  type: 'add'\n};\nconst host = 'http://localhost:8080'; //将修改state数据的方法，映射到props,默认会传入store里的dispach方法\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getTim: async () => {\n      await Axios({\n        method: 'get',\n        url: host + '/find',\n        params: {\n          page: 1,\n          size: 10\n        }\n      }).then(function (response) {\n        console.log('异步请求数据结束');\n        console.log(response.data);\n        dispatch({\n          type: \"setTimu\",\n          content: response.data\n        });\n      });\n    }\n  };\n} //将上面的这2个方法，将数据仓库的state和修改state的方法映射到组件上，形成新的组件。\n\n\nconst Dati = connect(mapStateToProps, mapDispatchToProps)(DatiCounter);\nexport default Dati;","map":{"version":3,"sources":["/Users/denghanbo/Desktop/test/src/view/Dati.js"],"names":["React","connect","Popover","NavBar","Icon","Button","Axios","DatiCounter","Component","constructor","props","answerEvent","setState","currentTimu","state","render","timuList","current","length","option","JSON","parse","options","quiz","map","item","index","componentWillMount","console","log","getTim","componentWillReceiveProps","mapStateToProps","value","num","addAction","type","host","mapDispatchToProps","dispatch","method","url","params","page","size","then","response","data","content","Dati"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { Popover, NavBar, Icon, Button } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport Axios from 'axios';\n\nclass DatiCounter extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentTimu: 0,\n            \n        }\n    }\n\n    render() {\n        \n        let timuList = this.props.timuList;\n        let current = this.state.currentTimu;\n \n\n        if(timuList.length>0){\n\n            let option = JSON.parse(timuList[current].options);\n\n            return (\n                <div>\n                    <h1>题目:{timuList[current].quiz}</h1>\n                    \n                    <div className=\"options\">\n                        题目列表\n                        {\n                            \n                            option.map((item,index)=>{\n\n                                return(\n\n                                    <div onClick={this.answerEvent}>\n                                        {index+1}:{item}\n                                    </div>\n                                )\n\n                            })\n\n                        }\n                    </div>\n                </div>\n            )\n\n        }else{\n\n            return (\n                <div>\n                    <h1>Loading......</h1>\n                    \n                  \n                </div>\n            )\n\n        }\n\n        \n    }\n\n\n    //点击答案回答问题后\n    answerEvent=()=>{\n        this.setState({\n            currentTimu:this.state.currentTimu++\n        })\n    }\n\n    componentWillMount() {\n        console.log(\"componentWillMount开始执行\");\n        this.props.getTim();\n    }\n\n    componentWillReceiveProps(){\n        console.log(\"componentWillReceiveProps开始执行\");\n        console.log(this.props);\n\n    }\n\n    \n}\n\n\n\n//将state映射到props函数\nfunction mapStateToProps(state) {\n    return {\n        value: state.num,\n        timuList:state.timuList\n    }\n}\n\nconst addAction = {\n    type: 'add'\n}\n\nconst host = 'http://localhost:8080';\n\n//将修改state数据的方法，映射到props,默认会传入store里的dispach方法\nfunction mapDispatchToProps(dispatch) {\n    \n    return {\n        getTim: async () => {\n\n            await Axios({\n                method: 'get',\n                url: host+'/find',\n                params: {\n                  page: 1,\n                  size: 10\n                }\n              }).then(function (response) {\n          \n                console.log('异步请求数据结束');\n                console.log(response.data);\n                dispatch({ type: \"setTimu\", content: response.data });\n              });\n\n        }\n    }\n}\n\n//将上面的这2个方法，将数据仓库的state和修改state的方法映射到组件上，形成新的组件。\nconst Dati = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DatiCounter)\n\n\nexport default Dati"]},"metadata":{},"sourceType":"module"}