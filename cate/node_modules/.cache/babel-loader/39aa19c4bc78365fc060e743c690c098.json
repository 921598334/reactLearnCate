{"ast":null,"code":"var _jsxFileName = \"/Users/denghanbo/Desktop/test/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { connect, Provider } from 'react-redux';\nimport { Popover, NavBar, Icon } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport './myStyle.css';\nimport Axios from 'axios';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'; // class App extends React.Component {\n//   state = {\n//     visible: true,\n//     selected: '',\n//   };\n//   async componentWillMount() {\n//     console.log('start');\n//     await Axios({\n//       method: 'get',\n//       url: 'http://localhost:8080/find',\n//       params: {\n//         page: 1,\n//         size: 10\n//       }\n//     })\n//       .then(function (response) {\n//         console.log(response.data);\n//       });\n//     }\n//     render() {\n//       return (\n//         <div>\n//         </div>);\n//     }\n//   }\n\nclass Counter extends React.Component {\n  render() {\n    console.log(this.props); //计数，通过stroe的state传给props,直接通过props就可以将state的数据获取\n\n    const value = this.props.value; //将修改数据的事件或者方法传入到props\n\n    const onAddClick = this.props.onAddClick; //等同于vuex的mapMutation mapState\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"\\u8BA1\\u6570\\u7684\\u6570\\u91CF\\uFF1A\", value), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onAddClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"\\u6570\\u5B57+1\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.onAddClick5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"\\u6570\\u5B57+5\"));\n  }\n\n}\n\nlet ActionFnObj = {\n  add: function (state, action) {\n    state.num++;\n    return state;\n  },\n  addNum: function (state, action) {\n    state.num = state.num + action.num;\n    return state;\n  }\n};\n\nfunction reducer(state = {\n  num: 0\n}, action) {\n  if (action.type.indexOf('redux') === -1) {\n    state = ActionFnObj[action.type](state, action);\n    return { ...state\n    };\n  } else {\n    return state;\n  }\n}\n\nconst store = createStore(reducer); //将state映射到props函数\n\nfunction mapStateToProps(state) {\n  return {\n    value: state.num\n  };\n}\n\nconst addAction = {\n  type: 'add'\n}; //将修改state数据的方法，映射到props,默认会传入store里的dispach方法\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAddClick: () => {\n      dispatch(addAction);\n    },\n    onAddClick5: () => {\n      dispatch({\n        type: \"addNum\",\n        num: 5\n      });\n    }\n  };\n} //将上面的这2个方法，将数据仓库的state和修改state的方法映射到组件上，形成新的组件。\n\n\nconst App = connect(mapStateToProps, mapDispatchToProps)(Counter);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/\",\n  component: App,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 7\n  }\n}, \" \"))), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/denghanbo/Desktop/test/src/index.js"],"names":["React","ReactDOM","createStore","connect","Provider","Popover","NavBar","Icon","Axios","BrowserRouter","Router","Link","Route","Counter","Component","render","console","log","props","value","onAddClick","onAddClick5","ActionFnObj","add","state","action","num","addNum","reducer","type","indexOf","store","mapStateToProps","addAction","mapDispatchToProps","dispatch","App","document","querySelector"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { connect, Provider } from 'react-redux'\n\nimport { Popover, NavBar, Icon } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport './myStyle.css';\nimport Axios from 'axios';\nimport {BrowserRouter as Router,Link,Route} from 'react-router-dom'\n\n\n// class App extends React.Component {\n//   state = {\n//     visible: true,\n//     selected: '',\n//   };\n\n//   async componentWillMount() {\n//     console.log('start');\n\n//     await Axios({\n//       method: 'get',\n//       url: 'http://localhost:8080/find',\n//       params: {\n//         page: 1,\n//         size: 10\n//       }\n//     })\n//       .then(function (response) {\n//         console.log(response.data);\n//       });\n\n//     }\n\n\n//     render() {\n//       return (\n//         <div>\n\n//         </div>);\n//     }\n//   }\n\n\n\n\n\n\n\n\nclass Counter extends React.Component {\n\n  render() {\n    console.log(this.props)\n    //计数，通过stroe的state传给props,直接通过props就可以将state的数据获取\n    const value = this.props.value;\n    //将修改数据的事件或者方法传入到props\n    const onAddClick = this.props.onAddClick;\n    //等同于vuex的mapMutation mapState\n    return (\n      <div>\n        <h1>计数的数量：{value}</h1>\n        <button onClick={onAddClick}>数字+1</button>\n        <button onClick={this.props.onAddClick5}>数字+5</button>\n      </div>\n    )\n\n\n  }\n}\n\n\n\nlet ActionFnObj = {\n  add: function (state, action) {\n    state.num++\n    return state\n  },\n  addNum: function (state, action) {\n\n    state.num = state.num + action.num;\n    return state\n  }\n}\nfunction reducer(state = { num: 0 }, action) {\n  if (action.type.indexOf('redux') === -1) {\n    state = ActionFnObj[action.type](state, action)\n    return { ...state }\n  } else {\n    return state;\n  }\n\n\n}\n\nconst store = createStore(reducer)\n\n//将state映射到props函数\nfunction mapStateToProps(state) {\n  return {\n    value: state.num\n\n  }\n}\n\nconst addAction = {\n  type: 'add'\n}\n//将修改state数据的方法，映射到props,默认会传入store里的dispach方法\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAddClick: () => { dispatch(addAction) },\n    onAddClick5: () => { dispatch({ type: \"addNum\", num: 5 }) }\n  }\n}\n\n//将上面的这2个方法，将数据仓库的state和修改state的方法映射到组件上，形成新的组件。\nconst App = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter)\n\n\n\n\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n\n    <Router>\n\n      <Route path=\"/\" component={App}> </Route>\n\n    </Router>\n    \n  </Provider>\n  , document.querySelector(\"#root\")\n)"]},"metadata":{},"sourceType":"module"}