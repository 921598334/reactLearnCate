{"ast":null,"code":"var _jsxFileName = \"/Users/denghanbo/Desktop/test/src/view/Dati.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Popover, NavBar, Icon, Button } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport fns from \"../store/asynMethods\";\n\nclass DatiCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTimu: 0,\n      timuArray: []\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"\\u9898\\u76EE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"\\u9898\\u76EE\\u5217\\u8868\"));\n  }\n\n  componentWillMount() {\n    this.props.getTim();\n  }\n\n} //将state映射到props函数\n\n\nfunction mapStateToProps(state) {\n  return {\n    value: state.num\n  };\n}\n\nconst addAction = {\n  type: 'add'\n}; //将修改state数据的方法，映射到props,默认会传入store里的dispach方法\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getTim: async () => {\n      let list = await fns.TmList();\n      console.log(\"异步返回的数据为：\");\n      console.log(list);\n      dispatch({\n        type: \"setTimu\",\n        content: list\n      });\n      console.log(\"mapDispatchToProps设置的数据：\" + list);\n    }\n  };\n} //将上面的这2个方法，将数据仓库的state和修改state的方法映射到组件上，形成新的组件。\n\n\nconst Dati = connect(mapStateToProps, mapDispatchToProps)(DatiCounter);\nexport default Dati;","map":{"version":3,"sources":["/Users/denghanbo/Desktop/test/src/view/Dati.js"],"names":["React","connect","Popover","NavBar","Icon","Button","fns","DatiCounter","Component","constructor","props","state","currentTimu","timuArray","render","console","log","componentWillMount","getTim","mapStateToProps","value","num","addAction","type","mapDispatchToProps","dispatch","list","TmList","content","Dati"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,aAA9C;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,CADJ;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHJ,CADJ;AASH;;AAEDO,EAAAA,kBAAkB,GAAG;AACjB,SAAKP,KAAL,CAAWQ,MAAX;AACH;;AA1BqC,C,CAmC1C;;;AACA,SAASC,eAAT,CAAyBR,KAAzB,EAAgC;AAC5B,SAAO;AACHS,IAAAA,KAAK,EAAET,KAAK,CAACU;AADV,GAAP;AAGH;;AAED,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE;AADQ,CAAlB,C,CAGA;;AACA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AAEHP,IAAAA,MAAM,EAAE,YAAY;AAChB,UAAIQ,IAAI,GAAG,MAAMpB,GAAG,CAACqB,MAAJ,EAAjB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AAEAD,MAAAA,QAAQ,CAAC;AAAEF,QAAAA,IAAI,EAAE,SAAR;AAAmBK,QAAAA,OAAO,EAAEF;AAA5B,OAAD,CAAR;AAEAX,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BU,IAAzC;AACH;AAVE,GAAP;AAYH,C,CAED;;;AACA,MAAMG,IAAI,GAAG5B,OAAO,CAChBkB,eADgB,EAEhBK,kBAFgB,CAAP,CAGXjB,WAHW,CAAb;AAMA,eAAesB,IAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { Popover, NavBar, Icon, Button } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport fns from \"../store/asynMethods\"\n\nclass DatiCounter extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentTimu: 0,\n            timuArray: []\n        }\n    }\n\n    render() {\n        console.log(this.props)\n        return (\n            <div>\n                <h1>题目</h1>\n\n                <div className=\"options\">\n                    题目列表\n                </div>\n            </div>\n        )\n    }\n\n    componentWillMount() {\n        this.props.getTim();\n    }\n\n    \n\n\n}\n\n\n\n//将state映射到props函数\nfunction mapStateToProps(state) {\n    return {\n        value: state.num\n    }\n}\n\nconst addAction = {\n    type: 'add'\n}\n//将修改state数据的方法，映射到props,默认会传入store里的dispach方法\nfunction mapDispatchToProps(dispatch) {\n    return {\n\n        getTim: async () => {\n            let list = await fns.TmList();\n            console.log(\"异步返回的数据为：\");\n            console.log(list);\n\n            dispatch({ type: \"setTimu\", content: list });\n\n            console.log(\"mapDispatchToProps设置的数据：\" + list);\n        }\n    }\n}\n\n//将上面的这2个方法，将数据仓库的state和修改state的方法映射到组件上，形成新的组件。\nconst Dati = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DatiCounter)\n\n\nexport default Dati"]},"metadata":{},"sourceType":"module"}