{"ast":null,"code":"var _jsxFileName = \"/Users/denghanbo/Desktop/test/src/view/Dati.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Popover, NavBar, Icon, Button } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport Axios from 'axios';\n\nclass DatiCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTimu: 0,\n      timuArray: []\n    };\n  }\n\n  render() {\n    console.log(\"得到了数据，开始进行渲染\");\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"\\u9898\\u76EE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"\\u9898\\u76EE\\u5217\\u8868\"));\n  }\n\n  componentWillMount() {\n    console.log(\"componentWillMount开始执行\");\n    this.props.getTim();\n  }\n\n  componentWillReceiveProps() {\n    console.log(\"componentWillReceiveProps开始执行\");\n    console.log(this.props);\n  }\n\n} //将state映射到props函数\n\n\nfunction mapStateToProps(state) {\n  return {\n    value: state.num,\n    timuList: state.timuList\n  };\n}\n\nconst addAction = {\n  type: 'add'\n};\nconst host = 'http://localhost:8080'; //将修改state数据的方法，映射到props,默认会传入store里的dispach方法\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getTim: async () => {\n      await Axios({\n        method: 'get',\n        url: host + '/find',\n        params: {\n          page: 1,\n          size: 10\n        }\n      }).then(function (response) {\n        console.log('异步请求数据结束');\n        console.log(response.data);\n        dispatch({\n          type: \"setTimu\",\n          content: response.data\n        });\n      });\n    }\n  };\n} //将上面的这2个方法，将数据仓库的state和修改state的方法映射到组件上，形成新的组件。\n\n\nconst Dati = connect(mapStateToProps, mapDispatchToProps)(DatiCounter);\nexport default Dati;","map":{"version":3,"sources":["/Users/denghanbo/Desktop/test/src/view/Dati.js"],"names":["React","connect","Popover","NavBar","Icon","Button","Axios","DatiCounter","Component","constructor","props","state","currentTimu","timuArray","render","console","log","componentWillMount","getTim","componentWillReceiveProps","mapStateToProps","value","num","timuList","addAction","type","host","mapDispatchToProps","dispatch","method","url","params","page","size","then","response","data","content","Dati"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,aAA9C;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,CADJ;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHJ,CADJ;AASH;;AAEDO,EAAAA,kBAAkB,GAAG;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,SAAKN,KAAL,CAAWQ,MAAX;AACH;;AAEDC,EAAAA,yBAAyB,GAAE;AACvBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AAEH;;AAlCqC,C,CAyC1C;;;AACA,SAASU,eAAT,CAAyBT,KAAzB,EAAgC;AAC5B,SAAO;AACHU,IAAAA,KAAK,EAAEV,KAAK,CAACW,GADV;AAEHC,IAAAA,QAAQ,EAACZ,KAAK,CAACY;AAFZ,GAAP;AAIH;;AAED,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE;AADQ,CAAlB;AAIA,MAAMC,IAAI,GAAG,uBAAb,C,CAEA;;AACA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAElC,SAAO;AACHV,IAAAA,MAAM,EAAE,YAAY;AAEhB,YAAMZ,KAAK,CAAC;AACRuB,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,GAAG,EAAEJ,IAAI,GAAC,OAFF;AAGRK,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,CADA;AAENC,UAAAA,IAAI,EAAE;AAFA;AAHA,OAAD,CAAL,CAODC,IAPC,CAOI,UAAUC,QAAV,EAAoB;AAE1BpB,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAQ,CAACC,IAArB;AACAR,QAAAA,QAAQ,CAAC;AAAEH,UAAAA,IAAI,EAAE,SAAR;AAAmBY,UAAAA,OAAO,EAAEF,QAAQ,CAACC;AAArC,SAAD,CAAR;AACD,OAZG,CAAN;AAcH;AAjBE,GAAP;AAmBH,C,CAED;;;AACA,MAAME,IAAI,GAAGrC,OAAO,CAChBmB,eADgB,EAEhBO,kBAFgB,CAAP,CAGXpB,WAHW,CAAb;AAMA,eAAe+B,IAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { Popover, NavBar, Icon, Button } from 'antd-mobile';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport Axios from 'axios';\n\nclass DatiCounter extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentTimu: 0,\n            timuArray: []\n        }\n    }\n\n    render() {\n        console.log(\"得到了数据，开始进行渲染\")\n        console.log(this.props)\n        return (\n            <div>\n                <h1>题目</h1>\n\n                <div className=\"options\">\n                    题目列表\n                </div>\n            </div>\n        )\n    }\n\n    componentWillMount() {\n        console.log(\"componentWillMount开始执行\");\n        this.props.getTim();\n    }\n\n    componentWillReceiveProps(){\n        console.log(\"componentWillReceiveProps开始执行\");\n        console.log(this.props);\n\n    }\n\n    \n}\n\n\n\n//将state映射到props函数\nfunction mapStateToProps(state) {\n    return {\n        value: state.num,\n        timuList:state.timuList\n    }\n}\n\nconst addAction = {\n    type: 'add'\n}\n\nconst host = 'http://localhost:8080';\n\n//将修改state数据的方法，映射到props,默认会传入store里的dispach方法\nfunction mapDispatchToProps(dispatch) {\n    \n    return {\n        getTim: async () => {\n\n            await Axios({\n                method: 'get',\n                url: host+'/find',\n                params: {\n                  page: 1,\n                  size: 10\n                }\n              }).then(function (response) {\n          \n                console.log('异步请求数据结束');\n                console.log(response.data);\n                dispatch({ type: \"setTimu\", content: response.data });\n              });\n\n        }\n    }\n}\n\n//将上面的这2个方法，将数据仓库的state和修改state的方法映射到组件上，形成新的组件。\nconst Dati = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DatiCounter)\n\n\nexport default Dati"]},"metadata":{},"sourceType":"module"}